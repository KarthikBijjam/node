// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file crypto/v1/crypto.proto (package crypto.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file crypto/v1/crypto.proto.
 */
export const file_crypto_v1_crypto: GenFile = /*@__PURE__*/
  fileDesc("ChZjcnlwdG8vdjEvY3J5cHRvLnByb3RvEgljcnlwdG8udjEiJQoGQ3J5cHRvEgwKBG5hbWUYASABKAkSDQoFcHJpY2UYAiABKAkiJgoWR2V0Q3J5cHRvQnlOYW1lUmVxdWVzdBIMCgRuYW1lGAEgASgJIjwKF0dldENyeXB0b0J5TmFtZVJlc3BvbnNlEiEKBmNyeXB0bxgBIAEoCzIRLmNyeXB0by52MS5DcnlwdG8iKQoSTGlzdENyeXB0b3NSZXF1ZXN0EhMKC25hbWVfZmlsdGVyGAEgASgJIjkKE0xpc3RDcnlwdG9zUmVzcG9uc2USIgoHY3J5cHRvcxgBIAMoCzIRLmNyeXB0by52MS5DcnlwdG8ytwEKDUNyeXB0b1NlcnZpY2USWAoPR2V0Q3J5cHRvQnlOYW1lEiEuY3J5cHRvLnYxLkdldENyeXB0b0J5TmFtZVJlcXVlc3QaIi5jcnlwdG8udjEuR2V0Q3J5cHRvQnlOYW1lUmVzcG9uc2USTAoLTGlzdENyeXB0b3MSHS5jcnlwdG8udjEuTGlzdENyeXB0b3NSZXF1ZXN0Gh4uY3J5cHRvLnYxLkxpc3RDcnlwdG9zUmVzcG9uc2ViBnByb3RvMw");

/**
 * The message representing a cryptocurrency.
 *
 * @generated from message crypto.v1.Crypto
 */
export type Crypto = Message<"crypto.v1.Crypto"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string price = 2;
   */
  price: string;
};

/**
 * Describes the message crypto.v1.Crypto.
 * Use `create(CryptoSchema)` to create a new message.
 */
export const CryptoSchema: GenMessage<Crypto> = /*@__PURE__*/
  messageDesc(file_crypto_v1_crypto, 0);

/**
 * Request to get one specific cryptocurrency.
 *
 * @generated from message crypto.v1.GetCryptoByNameRequest
 */
export type GetCryptoByNameRequest = Message<"crypto.v1.GetCryptoByNameRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message crypto.v1.GetCryptoByNameRequest.
 * Use `create(GetCryptoByNameRequestSchema)` to create a new message.
 */
export const GetCryptoByNameRequestSchema: GenMessage<GetCryptoByNameRequest> = /*@__PURE__*/
  messageDesc(file_crypto_v1_crypto, 1);

/**
 * Response containing a single cryptocurrency.
 *
 * @generated from message crypto.v1.GetCryptoByNameResponse
 */
export type GetCryptoByNameResponse = Message<"crypto.v1.GetCryptoByNameResponse"> & {
  /**
   * @generated from field: crypto.v1.Crypto crypto = 1;
   */
  crypto?: Crypto;
};

/**
 * Describes the message crypto.v1.GetCryptoByNameResponse.
 * Use `create(GetCryptoByNameResponseSchema)` to create a new message.
 */
export const GetCryptoByNameResponseSchema: GenMessage<GetCryptoByNameResponse> = /*@__PURE__*/
  messageDesc(file_crypto_v1_crypto, 2);

/**
 * Request to list all cryptocurrencies.
 *
 * @generated from message crypto.v1.ListCryptosRequest
 */
export type ListCryptosRequest = Message<"crypto.v1.ListCryptosRequest"> & {
  /**
   * Optional filter string
   *
   * @generated from field: string name_filter = 1;
   */
  nameFilter: string;
};

/**
 * Describes the message crypto.v1.ListCryptosRequest.
 * Use `create(ListCryptosRequestSchema)` to create a new message.
 */
export const ListCryptosRequestSchema: GenMessage<ListCryptosRequest> = /*@__PURE__*/
  messageDesc(file_crypto_v1_crypto, 3);

/**
 * Response containing a list of cryptocurrencies.
 *
 * @generated from message crypto.v1.ListCryptosResponse
 */
export type ListCryptosResponse = Message<"crypto.v1.ListCryptosResponse"> & {
  /**
   * @generated from field: repeated crypto.v1.Crypto cryptos = 1;
   */
  cryptos: Crypto[];
};

/**
 * Describes the message crypto.v1.ListCryptosResponse.
 * Use `create(ListCryptosResponseSchema)` to create a new message.
 */
export const ListCryptosResponseSchema: GenMessage<ListCryptosResponse> = /*@__PURE__*/
  messageDesc(file_crypto_v1_crypto, 4);

/**
 * Service definition.
 *
 * @generated from service crypto.v1.CryptoService
 */
export const CryptoService: GenService<{
  /**
   * Get a single crypto by name.
   *
   * @generated from rpc crypto.v1.CryptoService.GetCryptoByName
   */
  getCryptoByName: {
    methodKind: "unary";
    input: typeof GetCryptoByNameRequestSchema;
    output: typeof GetCryptoByNameResponseSchema;
  },
  /**
   * Get a list of cryptos, optionally filtered by name.
   *
   * @generated from rpc crypto.v1.CryptoService.ListCryptos
   */
  listCryptos: {
    methodKind: "unary";
    input: typeof ListCryptosRequestSchema;
    output: typeof ListCryptosResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_crypto_v1_crypto, 0);

